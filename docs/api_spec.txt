DATA COLLECTIONS 
----------------
All data in Raw Salad DB are organized in a treelike structure. Each leaf in
the tree is connected with data collection (endpoint), higher level nodes are
used to group those collections.

DATA FORMATS
------------
Public API of Raw Salad provides users with two optional data formats: XML and 
JSON both encoded in UTF-8.


RESPONSE STRUCTURE
------------------
Every response has the following structure:
{
    "ns":     application domain, e.g. http://otwartedane.pl
    "data":   returned data for sent request
    "uri":    request url
}

Information in "data" contains URLs which may be used for further navigation.

HELP URL
--------
Help URL returns information about:
* default api version
* available data formats
* default data format
* URL structure

1) http://otwartedane.pl/api/

COLLECTIONS INFO URL STRUCTURE
------------------------------
There are two forms of urls that provide information about data collections
and hierarchy between them:

1) http://otwartedane.pl/api/collections/

Information about data collections in a treelike form.

2) http://otwartedane.pl/api/collections/<endpoint>/meta/

Meta data about data in the endpoint provided in a URL.
<endpoint> - name of endpoint, e.g. data_50001
Names of endpoints are returned in response to the 1) request.

    EXAMPLES:
    * http://otwartedane.pl/api/collections/
      Get information about data collections organised in a treelike structure.

    * http://otwartedane.pl/api/collections/data_50001/meta/
      Get meta information about 'data_50001' collection.


DATA URL STRUCTURE
------------------
There three types of urls to retrieve information about data in data collections.
It is possible to specify which fields of data nodes should be returned, what is
described in  part 'QUERY PARAMETERS', when no information about needed fields
is passed, then all fields are returned.

1) http://otwartedane.pl/api/collections/<endpoint>/

Top level data in the endpoint provided in a URL.

2) http://otwartedane.pl/api/collections/<endpoint>/<id>/

Data of node identified by passed in a URL id. Node must be part of collection
connected with provided endpoint.

3) http://otwartedane.pl/api/collections/<endpoint>/<id>/children/

Data of children of node which is identified the same as in the previous point.

    EXAMPLES:
    * http://otwartedane.pl/api/collections/data_50001/
      Get top level data nodes from 'data_50001' endpoint.

    * http://otwartedane.pl/api/collections/data_50001/10000/
      Get data of node with id '10000' from 'data_50001' endpoint.

    * http://otwartedane.pl/api/collections/data_50001/10000/children/
      Get children of node with id '10000' from 'data_50001' endpoint.

SEARCH URL STRUCTURE
--------------------
There are two ways of searching data in data collections:
*   searching number of data nodes satisfying search criterion in one
    selected/all collections
*   retrieving data nodes satisfying search criterion in one collection,
    returned information does not contain node data, but their ids and
    uri that return their data

1) http://otwartedane.pl/api/search/count/<endpoint>/<query>/

The first way described above. To get all endpoints, 'all_endpoints' phrase
must be passed as endpoint name.

2) http://otwartedane.pl/api/search/data/<endpoint>/<query>/

The second way described above. Note that it is unable to get data from
all endpoints with one query, 'all_endpoints' will not work here.

    EXAMPLES:
    * http://otwartedane.pl/api/search/count/all_endpoints/school/
      Count data nodes that have 'school' phrase in any of their fields
      in all endpoints.

    * http://otwartedane.pl/api/search/data/data_50001/school/
      Get information about nodes that satisfy 'school' search criterion
      in endpoint 'data_50001'.

QUERY PARAMETERS
----------------
Query parameters specify:
1)  Data format in which response should be sent back. It can be used with
    all given types of URLs except for the HELP URL.
    field: 'format'
    available values: 'json', 'xml'

2)  Returned fields in data nodes. This field should be passed only in DATA URLs.
    field: 'fields'
    available values: combination of field keys separated by commas, e.g.
                      'name,value1,total_value'
    
    EXAMPLES:
    * http://otwartedane.pl/api/collections/?format=xml
      Information about collections in XML format.

    * http://otwartedane.pl/api/collections/data_50001/?fields=type,parent,value
      Top level data nodes from endpoint 'data_50001' and fields: 'type'
      'parent', 'value' and 'id'('id' field is always returned).

All API URLs are self descriptive and reflective. It means that all information 
necessary to browse Raw Salad DB and build software (or language wrappers) on 
top of Raw Salad API is included in API responses. 


STEP BY STEP THROUGH URL
------------------------------
This simple diagram shows how to use information in responses
to compose new requests, it does not show all connections.

    API information.
    http://otwartedane.pl/api/
    ||
    || 
    ||
    ||
    ==> <collections_uri>
        Data collections.
        http://otwartedane.pl/api/collections/
        ||
        ||
        ==> <meta_uri>
        ||  Meta data about collection 'data_50001'.
        ||  http://otwartedane.pl/api/collections/data_50001/meta/
        ||      ||
        ||      ||
        ||      ||
        ||      || <top_uri>
        ||      \/
        ==> <top_uri>
            Top level nodes of 'data_50001' collection.
            http://otwartedane.pl/api/collections/data_50001/
            ||
            ||
            ||
            ||
            ||
            ==> <children_uri>
                Children nodes of node with id = 1000000001
                from 'data_50001' collection.
                http://localhost:8000/api/collections/data_50001/1000000001/children


